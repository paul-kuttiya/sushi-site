var App={$el:$("main #content"),$itemCount:$("span.count"),templates:JST,bindEvents:function(){_.extend(this,Backbone.Events),this.on("showDetail",this.showDetail.bind(this)),this.on("add_to_cart",this.addToCart.bind(this)),this.on("empty_cart",this.emptyCart.bind(this)),this.on("checkout",this.checkout.bind(this))},checkout:function(){this.showCartDisplay(this.cartDisplay),this.showCheckoutView()},showCheckoutView:function(){this.checkoutView=new CheckoutView({collection:this.cart})},emptyCart:function(){this.cart.reset(),this.resetCartDisplay(),this.totalCount(0),this.emptyStorage()},emptyStorage:function(){localStorage.clear()},resetCartDisplay:function(){this.cartDisplay=this.getStorage("cart_display")},checkCartDisplay:function(a,b){var c=this.cartDisplay,d=c.findIndex(function(b){return b.id===a});return-1!==d?c[d]=b:c.push(b),c.length>7&&c.shift(),c},checkCartItem:function(a,b){return b?b.set("quantity",b.get("quantity")+1):(a.quantity=1,b=this.cart.add(a)),b.toJSON()},addToCart:function(a){var b,c=this.items.toJSON()[a-1],d=this.cart.get(a);d=this.checkCartItem(c,d),b=this.checkCartDisplay(a,d),this.setStorage("cart",this.cart),this.setStorage("cart_display",this.cartDisplay),this.showCartDisplay(b)},setStorage:function(a,b){localStorage.setItem(a,JSON.stringify(b))},getStorage:function(a){return JSON.parse(localStorage.getItem(a))||[]},showCartDisplay:function(a){a.length&&new CartItemsView({collection:a})},showIndexView:function(){this.showCartDisplay(this.cartDisplay),this.IndexView=new IndexView({collection:this.items})},showDetail:function(a){var b=this.items.get(a);this.showCartDisplay(this.cartDisplay),this.DetailView=new DetailView({model:b}),router.navigate("/menu/"+a)},totalCount:function(a){this.$itemCount.text(a)},init:function(){var a=this.getStorage("cart");this.cart=new CartItems(a),this.resetCartDisplay(),this.bindEvents()}};Handlebars.registerHelper("total",function(a){var b=0,c=0;return a.forEach(function(a){b+=a.quantity*a.price,c+=a.quantity}),App.totalCount(c),b}),Handlebars.registerHelper("If_order",function(a,b){return a.length>0?b.fn(this):b.inverse(this)});var Item=Backbone.Model.extend({}),CartItem=Backbone.Model.extend({}),Items=Backbone.Collection.extend({model:Item}),CartItems=Backbone.Collection.extend({model:CartItem}),IndexView=Backbone.View.extend({tagName:"ul",id:"items",events:{"click li header":"showDetail","click a.add_cart":"AddToCart"},AddToCart:function(a){a.preventDefault(),a.stopPropagation();var b=this.findId(a);console.log(b),App.trigger("add_to_cart",b)},findId:function(a){return $(a.target).closest("li").data("id")},showDetail:function(a){a.stopPropagation();var b=this.findId(a);App.trigger("showDetail",b)},template:App.templates.index,render:function(){this.$el.html(this.template(this.collection.toJSON())),App.$el.html(this.$el)},initialize:function(){this.render()}}),DetailView=Backbone.View.extend({template:App.templates.item_details,id:"item_details",events:{"click .nav.next":"nextItem","click .nav.prev":"prevItem","click a.add_cart":"AddToCart"},getId:function(){return this.$el.find("table").data("id")},AddToCart:function(a){a.preventDefault(),a.stopPropagation();var b=this.getId();console.log(b),App.trigger("add_to_cart",b)},nextItem:function(a){var b=this.getId()+1;b=b>App.items.length?1:b,App.trigger("showDetail",b)},prevItem:function(a){var b=this.getId()-1;b=b<1?App.items.length:b,App.trigger("showDetail",b)},render:function(){this.$el.html(this.template(this.model.toJSON())),App.$el.html(this.$el)},initialize:function(){this.render()}}),CartItemsView=Backbone.View.extend({template:App.templates.cart,id:"cart",events:{"click a.left.empty_cart":"emptyCart","click a.right.checkout":"checkout"},checkout:function(a){App.trigger("checkout")},emptyCart:function(a){a.preventDefault(),this.$el.remove(),App.trigger("empty_cart")},render:function(){this.$el.html(this.template(this.collection)),$("main #cart").remove(),this.$el.insertBefore(App.$el)},initialize:function(){this.render()}}),CheckoutView=Backbone.View.extend({template:App.templates.checkout,id:"checkout",render:function(){this.$el.html(this.template(this.collection.toJSON())),App.$el.html(this.$el)},initialize:function(){this.render(),this.listenTo(App,"empty_cart",this.render)}});